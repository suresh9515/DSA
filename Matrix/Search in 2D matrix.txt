class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        int R = matrix.length;
        int C = matrix[0].length;
        int i  = 0, j = C - 1;

		while(i < R && j >= 0)
		{
			if(matrix[i][j] == target)
			{
				System.out.println("Found at (" + i + ", " + j + ")");
				return true;
			}
			else if(matrix[i][j] > target)
			{
				j--;
			}
			else
			{
				i++;
			}
		}
		System.out.println("Not Found");
      
       return false;
    }
}




class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int m = matrix.size(); //row 
        int n = matrix[0].size();//column
        int left = 0, right = m * n - 1;

        while (left <= right) {
            int mid = left + (right - left) / 2;
            int mid_val = matrix[mid / n][mid % n];

            if (mid_val == target)
                return true;
            else if (mid_val < target)
                left = mid + 1;
            else
                right = mid - 1;
        }
        return false;
    }
};